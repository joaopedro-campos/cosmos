matrix:
  include:
    #C with clang
    - os: linux
      language: c
      before_script:
        - wget https://download.savannah.gnu.org/releases/libgraph/libgraph-1.0.2.tar.gz
        - tar -xvf libgraph-1.0.2.tar.gz
        - pushd libgraph-1.0.2  && ./configure --prefix=/usr && make && sudo make install && popd
      script:
        make c
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-5.0
          packages:
            - clang-5.0
            - libsdl1.2-dev
            - libsdl-image1.2 libsdl-image1.2-dev guile-1.8 guile-1.8-dev libsdl1.2debian libart-2.0-dev libaudiofile-dev libesd0-dev libdirectfb-dev libdirectfb-extra libfreetype6-dev libxext-dev x11proto-xext-dev libfreetype6 libaa1 libaa1-dev libslang2-dev libasound2 libasound2-dev
      env:
        - MATRIX_EVAL="CC=clang-5.0"

    #C with gcc
    - os: linux
      language: c
      before_script:
        - wget https://download.savannah.gnu.org/releases/libgraph/libgraph-1.0.2.tar.gz
        - tar -xvf libgraph-1.0.2.tar.gz
        - pushd libgraph-1.0.2  && ./configure --prefix=/usr && make && sudo make install && popd
      script:
        make c
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - gcc-7
            - libsdl1.2-dev
            - libsdl-image1.2 libsdl-image1.2-dev guile-1.8 guile-1.8-dev libsdl1.2debian libart-2.0-dev libaudiofile-dev libesd0-dev libdirectfb-dev libdirectfb-extra libfreetype6-dev libxext-dev x11proto-xext-dev libfreetype6 libaa1 libaa1-dev libslang2-dev libasound2 libasound2-dev
      env:
        - MATRIX_EVAL="CC=gcc-7"

    #C++ with g++
    - os: linux
      language: cpp
      script:
        - ./scripts/build_cpp.sh
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env:
        - MATRIX_EVAL="CXX=g++-7"
      install:
        - sudo apt-get install -qq g++-7
        - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-7 90

        # OpenCV dependencies - Details available at: http://docs.opencv.org/trunk/doc/tutorials/introduction/linux_install/linux_install.html
        - sudo apt-get install -y build-essential
        - sudo apt-get install -y cmake git libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev
        - sudo apt-get install -y python-dev python-numpy libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev

        - git clone https://github.com/opencv/opencv.git
        - git clone https://github.com/opencv/opencv_contrib.git
        - cd opencv

        # Create a new 'build' folder.
        - mkdir build
        - cd build

        # Set build instructions for Ubuntu distro.
        - cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D WITH_TBB=ON -D BUILD_NEW_PYTHON_SUPPORT=ON -D WITH_V4L=ON -D INSTALL_C_EXAMPLES=ON -D INSTALL_PYTHON_EXAMPLES=ON -D BUILD_EXAMPLES=ON -D WITH_QT=ON -D WITH_OPENGL=ON ..

        # Run 'make' with four threads.
        - make -j4

        # Install to OS.
        - sudo make install

        # Add configuration to OpenCV to tell it where the library files are located on the file system (/usr/local/lib)
        - sudo sh -c 'echo "/usr/local/lib" > /etc/ld.so.conf.d/opencv.conf'

        - sudo ldconfig
        - echo "OpenCV installed."
        - cmake -D CMAKE_BUILD_TYPE=RELEASE -D BUILD_EXAMPLES=OFF -D BUILD_opencv_apps=OFF -D BUILD_DOCS=OFF -D BUILD_PERF_TESTS=OFF -D BUILD_TESTS=OFF -D CMAKE_INSTALL_PREFIX=/usr/local ..

    # Verify file name
    - os: linux
      language: python
      python:
        - "3.6"
      script:
        - pip install namanager
        - namanager -s third_party/namanager_settings.json

    # Check formatting of Python code
    - os: linux
      language: python
      python: 3.6
      script:
        - pip install black
        - ./scripts/python_code_style_checker.sh

    # Check formatting of Javascript code
    - os: linux
      language: node_js
      node_js: node
      script:
        - npm install -g prettier
        - ./scripts/javascript_code_style_checker.sh

before_install:
   - eval "${MATRIX_EVAL}"
